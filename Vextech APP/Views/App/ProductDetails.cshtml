@model Vextech_APP.ViewModels.ProductModels.ProductViewModel

@{
    ViewData["Title"] = Model.Name;
    string session = Context.Request.Cookies["session"];
}

@{
    double rating = 0;
    if (Model.Reviews.Count() != 0)
    {
        List<int> arr = new();
        foreach (var item in Model.Reviews)
        {
            arr.Add(item.Rating);
        }
        rating = Queryable.Average(arr.AsQueryable());
    }
}

<header>
    <link href="~/css/index.css" rel="stylesheet" />
</header>

<div>
    <button class="btn btn-primary" onclick="window.history.back()">
         Go back
    </button>
    <hr />
    <dl class="row">
        <div class="col-8">
            <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
              <div class="carousel-indicators">

                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
              </div>
              <div class="carousel-inner">
              @foreach (var item in Model.Images)
              {
                <div class="carousel-item active">
                  <img src="~/img/@item.PictureName" class="d-block w-100" alt="...">
                </div>
              }
              </div>
              <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
              </button>
            </div>
        </div>
        <div class="card col-4">
            @if (Model.Release_date != null)
            {
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Release_date)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Release_date)
            </dd>
            }
            <dt class = "col-sm-3">
                Rating: @rating
            </dt>
            <dt class = "col-sm-3">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <div class="mt-auto">
                <p class="price">@Html.DisplayFor(model => model.Price)€</p>
                <button>Add to Cart</button>
            </div>
        </div>
    </dl>
</div>

<div>
    <hr />


    @if (session != null) {
        @if (!Vextech_APP.Permissions.HasUserCommented(Model.ID, session))
        {
            Vextech_APP.ViewModels.ProductModels.ProductReviewViewModel review = new() { ProductID = Model.ID };
            @Html.Partial("_PostComment", review)
        } else
        {
            <p>You have already commented on this product.</p>
        }
    } else {
        <p>Must be logged in to post a comment.</p>
    }


    <hr />
    <h2>Reviews (@Model.Reviews.Count())</h2>

    @foreach (var item in Model.Reviews)
    {
        <div>
            <b>@item.User.Firstname @item.User.Lastname: @item.Date</b>
            <p>@item.Comment</p>
            <div>
                @if (Context.Request.Cookies["session"] != null)
                {
                    if (Vextech_APP.Permissions.PermissionCheck("comments_update_all", session) || Vextech_APP.Permissions.PermissionCheck("comments_update_own", session) && Vextech_APP.Permissions.UsersComment(item.ID, session))
                    {
                        @Html.ActionLink("Edit","EditReview","User", new { commentID = @item.ID }) <span> </span>
                    }   
                    if (Vextech_APP.Permissions.PermissionCheck("comments_delete_all", session) || Vextech_APP.Permissions.PermissionCheck("comments_delete_own", session) && Vextech_APP.Permissions.UsersComment(item.ID, session))
                    {
                        @Html.ActionLink("Delete", "CommentDelete", new { /* id = Model.PrimaryKey */ });
                    }
                }
            </div>
        </div>
    }
    <br />
</div>
